{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","basename","process","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.edc960af.chunk.js","sourcesContent":["// context.js is component similar to provider in Redux\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(\r\n          contact => \r\n            contact.id === action.payload.id\r\n              ? (contact = action.payload)\r\n              : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [\r\n      /*\r\n      {\r\n        id: 1,\r\n        name: \"John Doe\",\r\n        email: \"jdoe@gmail.com\",\r\n        phone: \"555-555-5555\"\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"Karen Williams\",\r\n        email: \"jode@gmail.com\",\r\n        phone: \"222-222-2222\"\r\n      },\r\n      {\r\n        id: 3,\r\n        name: \"Henry Johnson\",\r\n        email: \"jode@gmail.com\",\r\n        phone: \"111-111-1111\"\r\n      }\r\n        */\r\n    ],\r\n\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  async componentDidMount() {\r\n    // axios\r\n    //   .get('https://jsonplaceholder.typicode.com/users')\r\n    //   .then(res => this.setState({ contacts: res.data }));\r\n\r\n    // Rewritten in async await syntax\r\n    const res = await axios\r\n      .get('https://jsonplaceholder.typicode.com/users');\r\n\r\n    this.setState({contacts: res.data});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n//import './contact.css';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n  static propTypes = {\r\n    /*\r\n    name: PropTypes.string.isRequired,\r\n    email: PropTypes.string.isRequired,\r\n    phone: PropTypes.string.isRequired,\r\n    */\r\n    contact: PropTypes.object.isRequired\r\n    /* No longer need after Context Implementation\r\n    deleteClickHandler: PropTypes.func.isRequired\r\n    */\r\n  };\r\n\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n  // constructor() {\r\n  //   super();\r\n  //   this.state = {};\r\n\r\n  //   this.onShowClick = this.onShowClick.bind(this);\r\n  // }\r\n\r\n  // Custom method requires either bind this. This can be done by onClick = {this.onShowClick.bind(this)} or constructor or arrow function\r\n  // onShowClick(){\r\n  //   //console.log('Hello World');\r\n  //   console.log(this.state);\r\n  // }\r\n\r\n  // onShowClick = () => {\r\n  //   console.log(this.state);\r\n  // }\r\n\r\n  // Event object\r\n  // onShowClick = e => {\r\n  //   //console.log(e.target);\r\n  //   this.setState({showContactInfo: !this.state.showContactInfo});\r\n  // };\r\n\r\n  // onShowClick = (id, e) => {\r\n  //   console.log(id);\r\n  // } // Output: 1\r\n\r\n  // onShowClick = (name, e) => {\r\n  //   console.log(name);\r\n  // } // Output: {name}\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    //console.log('clicked');\r\n    /* No Longer needed after Context Implementation\r\n    this.props.deleteClickHandler()\r\n    */\r\n    /*\r\n    axios\r\n      // Delete from back end\r\n      .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n      // Delete from DOM\r\n      .then(res => dispatch({type: 'DELETE_CONTACT', payload: id}));\r\n    */\r\n\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    // Destructuring\r\n    //const { name, email, phone } = this.props;\r\n    //const { contact } = this.props;\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card card-body mb-3'>\r\n              {/*<h4>John Doe</h4>*/}\r\n              {/*<h4>{this.props.name}</h4>*/}\r\n              <h4>\r\n                {name}{' '}\r\n                {/*\r\n          <i \r\n            onClick={() => console.log('Hello')}className=\"fas fa-sort-down\" \r\n          />\r\n          */}\r\n                {/*\r\n          <i \r\n            onClick={this.onShowClick.bind(this, 1)}className=\"fas fa-sort-down\" \r\n          />\r\n          */}\r\n                <i\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    });\r\n                  }}\r\n                  className='fas fa-sort-down'\r\n                  style={{ cursor: 'pointer' }}\r\n                />\r\n                <i\r\n                  className='fas fa-times'\r\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                  /*onClick={this.onDeleteClick}*/\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i \r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      float: 'right',\r\n                      color: 'black',\r\n                      marginRight: '1rem'\r\n                    }}></i>\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className='list-group'>\r\n                  {/*\r\n          <li>Email: jdoe@gmail.com</li>\r\n          <li>Phone: 555-555-5555</li>\r\n          */}\r\n                  {/*\r\n          <li>Email: {this.props.email}</li>\r\n          <li>Phone: {this.props.phone}</li>\r\n          */}\r\n\r\n                  <li className='list-group-item'>Email: {email}</li>\r\n                  <li className='list-group-item'>Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  email: PropTypes.string.isRequired,\r\n  phone: PropTypes.string.isRequired,\r\n};\r\n*/\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  // constructor is not needed if just processing state.\r\n  /*constructor() {\r\n    super();\r\n    this.state = {\r\n  */\r\n /* Moved to context.js\r\n  state = {\r\n      contacts: [\r\n        {\r\n          id: 1,\r\n          name: \"John Doe\",\r\n          email: \"jdoe@gmail.com\",\r\n          phone: \"555-555-5555\"\r\n        },\r\n        {\r\n          id: 2,\r\n          name: \"Karen Williams\",\r\n          email: \"jode@gmail.com\",\r\n          phone: \"222-222-2222\"\r\n        },\r\n        {\r\n          id: 3,\r\n          name: \"Henry Johnson\",\r\n          email: \"jode@gmail.com\",\r\n          phone: \"111-111-1111\"\r\n        }\r\n      ]\r\n    };\r\n  */\r\n    /* Moved as an action to reducer in context.js after Context implementation\r\n    deleteContact = (id) => {\r\n      //console.log(id);\r\n      const { contacts } = this.state\r\n\r\n      const newContacts = contacts.filter(contact => contact.id !== id);\r\n\r\n      this.setState({\r\n        contacts: newContacts\r\n      });\r\n    };\r\n    */\r\n\r\n  render() {\r\n    \r\n    //const { contacts } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const {contacts} = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact </span>List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact\r\n                  key={contact.id}\r\n                  /*\r\n                  name={contact.name}\r\n                  email={contact.email}\r\n                  phone={contact.phone}\r\n                  */\r\n                  contact={contact}\r\n                  /* Moved to Contact after Context implementation\r\n                  deleteClickHandler={this.deleteContact.bind(this, contact.id)}\r\n                  */\r\n                />\r\n              ))}\r\n            </React.Fragment>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","// stateless functional component\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n    <label htmlFor={name}>{label}</label>\r\n      <input \r\n        type={type} \r\n        name={name}\r\n        /*is-invalid and is invalid-feedback is from Bootstrap}*/\r\n        className={classnames('form-control form-control-lg', {'is-invalid': error})}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n\r\n// No longer need uuid because https://jsonplaceholder.typicode.com api auto creates id usually the case for apis  \r\n//import uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  /* \r\n  componentDidMount = () => console.log(this.props);\r\n  */\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    //console.log(this.state);\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Validation/Check for Errors\r\n    if (name === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          name: \"Name is required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          email: \"Email is required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          phone: \"Phone is required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      //id: uuid(), // no longer need uuid() because the api auto creates it when a new contact is created\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    // Post request using promise\r\n    // axios\r\n    //   .post('https://jsonplaceholder.typicode.com/users', newContact).then(res => dispatch({ type: \"ADD_CONTACT\", payload: res.data }));\r\n\r\n    // Post request using async await\r\n    const res = await axios.post(\r\n      'https://jsonplaceholder.typicode.com/users', newContact\r\n    );\r\n\r\n    dispatch({ type: 'ADD_CONTACT', payload: res.data});\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    // redirects back to '/' after contact has been submitted\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  //onNameChange = e => this.setState({ name: e.target.value });\r\n  //onEmailChange = e => this.setState({ email: e.target.value });\r\n  //onPhoneChange = e => this.setState({ phone: e.target.value });\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  {/* Replaced by TextInputGroup\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input \r\n                      type=\"text\" \r\n                      name=\"name\"\r\n                      className=\"form-control form-control-lg\"\r\n                      placeholder=\"Enter Name...\"\r\n                      value={name}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div> \r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input \r\n                      type=\"email\"\r\n                      name=\"email\" \r\n                      className=\"form-control form-control-lg\"\r\n                      placeholder=\"Enter Email...\"\r\n                      value={email}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div> \r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"phone\">Phone</label>\r\n                    <input \r\n                      type=\"text\"\r\n                      name=\"phone\" \r\n                      className=\"form-control form-control-lg\"\r\n                      placeholder=\"Enter Phone...\"\r\n                      value={phone}\r\n                      onChange={this.onChange}\r\n                    />\r\n                \r\n                  </div>\r\n                  */}\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount(){\r\n    const { id } = this.props.match.params\r\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Validation/Check for Errors\r\n    if (name === '') {\r\n      this.setState({\r\n        errors: {\r\n          name: 'Name is required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({\r\n        errors: {\r\n          email: 'Email is required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({\r\n        errors: {\r\n          phone: 'Phone is required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    }\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    // axios.put(url, data)\r\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n    dispatch({type: 'UPDATE_CONTACT', payload: res.data});\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card mb-3'>\r\n              <div className='card-header'>Edit Contact</div>\r\n              <div className='card-body'>\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label='Name'\r\n                    name='name'\r\n                    placeholder='Enter Name'\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label='Email'\r\n                    name='email'\r\n                    type='email'\r\n                    placeholder='Enter Email'\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label='Phone'\r\n                    name='phone'\r\n                    placeholder='Enter Phone'\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type='submit'\r\n                    value='Update Contact'\r\n                    className='btn btn-light btn-block'\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/*\r\n function Header() {\r\n  return (\r\n    <div>\r\n      <h1>Contact Manager</h1>\r\n    </div>\r\n  )\r\n}\r\n*/\r\n\r\n// Arrow function format\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <div>\r\n      {/*<h1>Contact Manager</h1>*/}\r\n      {/*<h1 style={{color: 'red', fontSize: '50px'}}>{branding}</h1>*/}\r\n      {/*<h1 style={headingStyle}>{branding}</h1>*/}\r\n      {/*<h1>{branding}</h1>*/}\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n          {/* Use Link instead of a tag\r\n          <a href=\"/\" className=\"nav-link\">Home</a>\r\n          */}\r\n          <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"></i>Home</Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n          <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i>Add</Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n          <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"></i>About</Link>\r\n          </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Default props\r\nHeader.defaultProps = {\r\n  // If no props is passed in when component is used\r\n  branding: 'My App'\r\n};\r\n\r\n// Typechecking with PropTypes\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n}\r\n\r\n/*\r\nconst headingStyle = {\r\n  color: 'green',\r\n  fontSize: '50px'\r\n}\r\n*/\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div>\r\n      {/*match is props method in react-router\r\n      <h1 className=\"display-4\">{props.match.params.id}</h1>\r\n      */}\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\"\r\n  };\r\n\r\n  // do not need to use arrow function for lifecycle methods\r\n  componentDidMount() {\r\n    //console.log('componentDidMount...');\r\n    // Generally use for http calls to API or fetching data from within component to state.\r\n\r\n    // fetching a json file\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\r\n      .then(response => response.json())\r\n      //.then(data => console.log(data));\r\n      .then(data =>\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body\r\n        })\r\n      );\r\n  }\r\n\r\n  //Deprecated\r\n  // componentWillMount(){\r\n  //   console.log('componentWillMount...');\r\n  // }\r\n\r\n  // componentDidUpdate(){\r\n  //   console.log('componentDidUpdate...');\r\n  // }\r\n\r\n  //Deprecated\r\n  // componentWillUpdate(){\r\n  //   console.log('componentWillUpdate...');\r\n  // }\r\n\r\n  //Deprecated because React is becoming asynchronous nature -in order to use add UNSAFE_\r\n  //Or use static getDerivedStateFromProps(nextProps, prevState)\r\n  // UNSAFE_componentWillReceiveProps(nextProps, nextState){\r\n  //   console.log('componentWillReceiveProps');\r\n  // }\r\n\r\n  // static getDerivedStateFromProps(nextProps, prevState){\r\n  // cannot use this.setState(); Need to return state.\r\n  //   return {\r\n  //     test: 'something'\r\n  //   };\r\n  // }\r\n\r\n  // getSnapshotBeforeUpdate(prevProps, prevState){\r\n  //   console.log('getSnapshotBeforeUpdate...');\r\n  // }\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n//import Contact from './components/Contact';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        {/* Need to add basename={process.env} for BrowserRouter to work */}\n        <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <Header branding=\"Contact Manager\"/>\n        <div className=\"container\">\n          {/*\n          <Contact name=\"John Doe\" email=\"jdoe@gmail.com\" phone=\"555-555-5555\"/>\n          <Contact name=\"Karen Smith\" email=\"karen@gmail.com\" phone=\"333-333-3333\"/>\n          */}\n          {/*\n          <AddContact />\n          <Contacts/>\n          */}\n          <Switch>\n            <Route exact path=\"/\" component={Contacts}/>\n            <Route exact path=\"/contact/add\" component={AddContact}/>\n            <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n            {/* react router allows to use dynamic paths eg :id\n            <Route exact path=\"/about/:id\" component={About}/>\n            */}\n            <Route exact path=\"/about\" component={About}/>\n            <Route exact path=\"/test\" component={Test}/>\n            <Route component={NotFound}/>\n          </Switch>\n        </div>\n      </div>\n      </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}